# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: 将VitePress网站部署到页面

on:
  # 在针对“main”分支的推送上运行。如果使用“master”分支作为默认分支，请将其更改为“master”。
  push:
    branches: [main]

  # 允许您从“操作”选项卡手动运行此工作流
  workflow_dispatch:

# 设置GITHUB_TOKEN的权限以允许部署到GITHUB页面
permissions:
  contents: read
  pages: write
  id-token: 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

# 只允许一次并发部署，跳过在进行中的运行和最近排队的运行之间排队的运行
# 但是，不要取消正在进行的运行，因为我们希望完成这些生产部署
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 生成作业
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 如果未启用lastUpdated，则不需要
      # - 使用: pnpm/action-setup@v2 # 如果使用pnpm，请取消注释
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm # or pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install dependencies
        run: npm ci # or pnpm install / yarn install
      - name: Build with VitePress
        run: npm run docs:build # or pnpm docs:build / yarn docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/.vitepress/dist

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
